Definição de Teste:
http://softwaretestingfundamentals.com/definition-of-test/

Padrão AAA (Arrange, Act, Assert) 
ARANGE (todas pre condicoes e entradas - cenário)
ACT (o objeto ou metodo a testar)
ASSERT (que resultados experados devem ocorrer)
http://wiki.c2.com/?/ArrangeActAssert

Padrão Given/When/Then
https://martinfowler.com/bliki/GivenWhenThen.html

xUnit
https://xunit.github.io/

MSTests
https://github.com/Microsoft/testfx-docs

Teste de unidade(unit test)
http://wiki.c2.com/?/UnitTest

NUnit
https://nunit.org/

Comparativo entre os frameworks de Teste
https://dev.to/hatsrumandcode/net-core-2-why-xunit-and-not-nunit-or-mstest--aei

Porque xUnit?
https://www.martin-brennan.com/why-xunit/

Microsoft está usando o xUnit
https://dev.to/hatsrumandcode/net-core-2-why-xunit-and-not-nunit-or-mstest--aei

 classes de equivalência 
a qual consiste em dividir os dados em várias partições para tornar os testes mais eficientes.
https://en.wikipedia.org/wiki/Equivalence_partitioning

https://en.wikipedia.org/wiki/Boundary-value_analysis

**** Classe Equivalência criar método com varias entradas(theory)
### Facts são testes que são sempre verdades e testam coisas invariantes(nao dependem de valor de entrada);
### Theory são testes que são verdades para um tipo particular de dados(mesmo codigo para varias condicoes de entrada);

[InlineData] = dados recebidos via parametros(dados simples)
[MemberData] = dados complexos

### Best practices
informar o GivenWhenThen,
para tal colocar um nome da classe do teste o metodo que se esta testando(exemplo LeilaoTerminaPregao) = Given
e o nome do metodo de teste o retorno esperado, dado cenario especifico (exemplo RetornaZeroDadoLeilaoSemLance)